{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/test/test.component.ts","./src/app/core/test/test.component.html","./src/app/core/test/test.module.ts","./src/app/wss/wss.mediasoup.ts","./src/app/wss/wss.module.ts","./src/app/wss/wss.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestComponent } from './core/test/test.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { WssModule } from './wss/wss.module';\n\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoggerModule.forRoot({ level: NgxLoggerLevel.DEBUG }),\n    WssModule,\n    CoreModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TestModule } from './test/test.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    TestModule\n  ],\n  exports: [\n    TestModule,\n  ]\n})\nexport class CoreModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { WssService } from 'src/app/wss/wss.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  @ViewChild('producerVideo', { static: false }) producerVideo: ElementRef;\n  @ViewChild('consumerVideo', { static: false }) consumerVideo: ElementRef;\n  @ViewChild('consumerAudio', { static: false }) consumerAudio: ElementRef;\n\n  // tslint:disable-next-line: variable-name\n  private readonly user_id: string = 'aaa' + Math.random();\n\n  constructor(\n    private readonly logger: NGXLogger,\n    private wssService: WssService\n  ) { }\n\n  async ngOnInit() {\n    this.wssService.connect(this.user_id);\n  }\n\n  public showProducerVideo() {\n    this.producerVideo.nativeElement.srcObject = this.wssService.mediasoup.producerVideoStream;\n  }\n\n  public showConsumerVideo() {\n    const keys = Array.from(this.wssService.mediasoup.consumersVideoStream.keys());\n    this.consumerVideo.nativeElement.srcObject = this.wssService.mediasoup.consumersVideoStream.get(keys[0]);\n  }\n\n  public showConsumerAudio() {\n    const keys = Array.from(this.wssService.mediasoup.consumersAudioStream.keys());\n    this.consumerAudio.nativeElement.srcObject = this.wssService.mediasoup.consumersAudioStream.get(keys[0]);\n  }\n\n  public pauseProducerVideo() {\n    this.wssService.mediasoup.producerVideoPause();\n  }\n\n  public resumeProducerVideo() {\n    this.wssService.mediasoup.producerVideoResume();\n  }\n\n  public pauseProducerAudio() {\n    this.wssService.mediasoup.producerAudioPause();\n  }\n\n  public resumeProducerAudio() {\n    this.wssService.mediasoup.producerAudioResume();\n  }\n}\n","<table>\n  <tr>\n    <td>\n      <div>Producer Video</div>\n      <video #producerVideo autoplay controls playsinline style=\"height: 400px; width: 400px\"></video>\n    </td>\n    <td>\n      <div>Consumer Video</div>\n      <video #consumerVideo autoplay controls playsinline style=\"height: 400px; width: 400px\"></video>\n    </td>\n    <td>\n      <div>Consumer Audio</div>\n      <audio #consumerAudio autoplay controls playsinline style=\"height: 400px; width: 400px\"></audio>\n    </td>\n  </tr>\n  <tr>\n    <td><button (click)=\"showProducerVideo()\">Show producer video</button></td>\n    <td><button (click)=\"showConsumerVideo()\">Show consumer video</button></td>\n    <td><button (click)=\"showConsumerAudio()\">Show consumer audio</button></td>\n  </tr>\n  <tr>\n    <td>\n      <button (click)=\"pauseProducerVideo()\">Pause producer video</button>\n      <button (click)=\"resumeProducerVideo()\">Resume producer video</button>\n    </td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>\n      <button (click)=\"pauseProducerAudio()\">Pause producer audio</button>\n      <button (click)=\"resumeProducerAudio()\">Resume producer audio</button>\n    </td>\n    <td></td>\n    <td></td>\n  </tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TestComponent } from './test.component';\n\n\n\n@NgModule({\n  declarations: [TestComponent],\n  imports: [\n    CommonModule\n  ],\n  bootstrap: [\n    TestComponent\n  ]\n})\nexport class TestModule { }\n","import * as mediasoupClient from 'mediasoup-client';\nimport { IDevice } from 'mediasoup-client/Device';\nimport { ITransport } from 'mediasoup-client/Transport';\nimport { IProducer } from 'mediasoup-client/Producer';\nimport { IConsumer } from 'mediasoup-client/Consumer';\nimport { TKind, TPeer, TState, IPeerStat, ITransportStat, IVideoOrientation } from 'mediasoup-client/interfaces';\n\ntype IOSocket = SocketIOClient.Socket & { request: (ioEvent: string, data?: any) => Promise<any> };\n\nexport class MediasoupService {\n  private mediasoupDevice: IDevice;\n\n  private producerVideo: IProducer;\n  private producerAudio: IProducer;\n\n  private producerTransport: ITransport;\n  private consumerTransport: ITransport;\n\n  public producerVideoStream: MediaStream;\n  public producerAudioStream: MediaStream;\n\n  public consumersVideo: Map<string, IConsumer> = new Map();\n  public consumersAudio: Map<string, IConsumer> = new Map();\n\n  public consumersVideoStream: Map<string, MediaStream> = new Map();\n  public consumersAudioStream: Map<string, MediaStream> = new Map();\n\n  constructor(private readonly socket: IOSocket) {\n    this.mediasoupDevice = new mediasoupClient.Device({});\n\n    /**\n     * Когда пользователь (не current_user) начинает передавать свой стрим\n     */\n    this.socket.on('mediaProduce', async (data: { user_id: string; kind: TKind }) => {\n      try {\n        switch (data.kind) {\n          case 'video':\n            await this.consumerVideoStart(data.user_id);\n            break;\n          case 'audio':\n            await this.consumerAudioStart(data.user_id);\n            break;\n        }\n      } catch (error) {\n        console.error(error.message, error.stack);\n      }\n    });\n\n    /**\n     * Когда пользователь (любой) поворачивает камеру\n     */\n    this.socket.on('mediaVideoOrientationChange', async (data: {\n      user_id: string; videoOrientation: IVideoOrientation\n    }) => {\n      console.log('mediaVideoOrientationChange', data);\n    });\n\n    /**\n     * Когда пользователю (current_user) необходимо заново переподключить стрим\n     */\n    this.socket.on('mediaReproduce', async (data: { kind: TKind }) => {\n      try {\n        switch (data.kind) {\n          case 'audio':\n            this.producerAudioStart();\n            break;\n          case 'video':\n            this.producerVideoStart();\n            break;\n        }\n      } catch (error) {\n        console.error(error.message, error.stack);\n      }\n    });\n\n    /**\n     * Когда пользователь (не current_user) ставит свой стрим на паузу\n     */\n    this.socket.on('mediaProducerPause', async (data: { user_id: string; kind: TKind }) => {\n      console.log('mediaProducerPause', data);\n    });\n\n    /**\n     * Когда пользователь (не current_user) снимает свой стрим с паузы\n     */\n    this.socket.on('mediaProducerResume', async (data: { user_id: string; kind: TKind }) => {\n      console.log('mediaProducerResume', data);\n    });\n\n    /**\n     * Когда кто-то разговаривает\n     */\n    this.socket.on('mediaActiveSpeaker', async (data: { user_id: string; volume: number }) => {\n      console.log('mediaActiveSpeaker', data);\n    });\n\n    /**\n     * Когда в комнате сменился воркер медиасупа и требуется переподключиться.\n     */\n    this.socket.on('mediaReconfigure', async () => {\n      try {\n        await this.load(true);\n        await this.producerAudioStart();\n        await this.producerVideoStart();\n      } catch (error) {\n        console.error(error.message, error.stack);\n      }\n    });\n  }\n\n  /**\n   * Сменить воркер медиасупа в комнате\n   */\n  public async reConfigureMedia() {\n    try {\n      await this.socket.request('mediaReconfigure');\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Подключиться к медиасупу\n   * @param skipConsume не принимать стримы от уже подключенных\n   */\n  public async load(skipConsume: boolean = false): Promise<void> {\n    try {\n      const data: { routerRtpCapabilities: RTCRtpCapabilities }\n        = await this.socket.request('media', { action: 'getRouterRtpCapabilities' });\n\n      if (!this.mediasoupDevice.loaded) {\n        await this.mediasoupDevice.load(data);\n      }\n\n      await this.createProducerTransport();\n      await this.createConsumerTransport();\n\n      if (!skipConsume) {\n        const audioProducerIds: string[] = await this.socket.request('media', { action: 'getAudioProducerIds' });\n\n        audioProducerIds.forEach(async (id) => {\n          await this.consumerAudioStart(id);\n        });\n\n        const videoProducerIds: string[] = await this.socket.request('media', { action: 'getVideoProducerIds' });\n\n        videoProducerIds.forEach(async (id) => {\n          await this.consumerVideoStart(id);\n        });\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Отключиться от медиасупа\n   */\n  public async close(): Promise<void> {\n    try {\n      await this.producerVideoClose();\n      await this.producerAudioClose();\n\n      if (this.producerTransport && !this.producerTransport.closed) {\n        this.producerTransport.close();\n      }\n\n      if (this.consumerTransport && !this.consumerTransport.closed) {\n        this.consumerTransport.close();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Создать транспорт для передачи своего стрима\n   */\n  private async createProducerTransport(): Promise<void> {\n    try {\n      const data: {\n        type: TPeer, params: { id: string; iceParameters: RTCIceParameters; iceCandidates: RTCIceCandidate[]; dtlsParameters: object }\n      } = await this.socket.request('media', { action: 'createWebRtcTransport', data: { type: 'producer' } });\n\n      this.producerTransport = this.mediasoupDevice.createSendTransport(data.params);\n\n      // 'connect' | 'produce' | 'producedata' | 'connectionstatechange'\n      this.producerTransport.on('connect', async ({ dtlsParameters }, callback, errback) => {\n        await this.socket.request('media', { action: 'connectWebRtcTransport', data: { dtlsParameters, type: 'producer' } })\n          .then(callback)\n          .catch(errback);\n      });\n\n      this.producerTransport.on('produce', async ({ kind, rtpParameters }, callback, errback) => {\n        await this.socket.request('media', {\n          action: 'produce',\n          data: {\n            producerTransportId: this.producerTransport.id,\n            kind,\n            rtpParameters,\n          },\n        }).then(({ id }) => callback({ id }))\n          .catch(errback);\n      });\n\n      this.producerTransport.on('connectionstatechange', async (state: TState) => {\n        switch (state) {\n          case 'connecting': break;\n          case 'connected': break;\n          case 'failed':\n            this.producerTransport.close();\n            break;\n          default: break;\n        }\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Создать транспорт для приема стримов от других пользователей\n   */\n  private async createConsumerTransport(): Promise<void> {\n    try {\n      const data: {\n        type: TPeer, params: { id: string; iceParameters: RTCIceParameters; iceCandidates: RTCIceCandidate[]; dtlsParameters: object }\n      } = await this.socket.request('media', { action: 'createWebRtcTransport', data: { type: 'consumer'} });\n\n      this.consumerTransport = this.mediasoupDevice.createRecvTransport(data.params);\n\n      // 'connect' | 'connectionstatechange'\n      this.consumerTransport.on('connect', async ({ dtlsParameters }, callback, errback) => {\n        await this.socket.request('media', { action: 'connectWebRtcTransport', data: { dtlsParameters, type: 'consumer' } })\n          .then(callback)\n          .catch(errback);\n      });\n\n      this.consumerTransport.on('connectionstatechange', async (state: TState) => {\n        switch (state) {\n          case 'connecting': break;\n          case 'connected': break;\n          case 'failed':\n            this.consumerTransport.close();\n            break;\n          default: break;\n        }\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Начать передавать свой видео-стрим\n   */\n  public async producerVideoStart(): Promise<void> {\n    try {\n      if (this.mediasoupDevice.canProduce('video')) {\n        const videoStream = await navigator.mediaDevices.getUserMedia({ video: { width: 200, height: 150 } });\n        const videoTrack = videoStream.getVideoTracks()[0];\n\n        if (videoTrack) {\n          if (this.producerTransport && !this.producerTransport.closed) {\n            this.producerVideo = await this.producerTransport.produce({ track: videoTrack });\n          }\n\n          // 'trackended' | 'transportclose'\n          // this.producerVideo.on('transportclose', () => {});\n        }\n        this.producerVideoStream = videoStream;\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Поставить передачу своего видео-стрима на паузу\n   */\n  public async producerVideoPause(): Promise<void> {\n    try {\n      if (this.producerVideo && !this.producerVideo.paused) {\n        this.producerVideo.pause();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Снять с паузы передапчу своего видео-стрима\n   */\n  public async producerVideoResume(): Promise<void> {\n    try {\n      if (this.producerVideo && this.producerVideo.paused && !this.producerVideo.closed) {\n        this.producerVideo.resume();\n      } else if (this.producerVideo && this.producerVideo.closed) {\n        await this.producerVideoStart();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Остановить передачу своего видео-стрима (для повторной передачи требуется пересоздать продюсера)\n   */\n  public async producerVideoClose(): Promise<void> {\n    try {\n      if (this.producerVideo && !this.producerVideo.closed) {\n        this.producerVideo.close();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Начать передавать свой аудио-стрим\n   */\n  public async producerAudioStart(): Promise<void> {\n    try {\n      if (this.mediasoupDevice.canProduce('audio')) {\n        const audioStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const audioTrack = audioStream.getAudioTracks()[0];\n\n        if (audioTrack) {\n          if (this.producerTransport && !this.producerTransport.closed) {\n            this.producerAudio = await this.producerTransport.produce({ track: audioTrack });\n          }\n\n          // 'trackended' | 'transportclose'\n          // this.producerAudio.on('transportclose', () => {});\n        }\n\n        this.producerAudioStream = audioStream;\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Поставить передачу своего аудио-стрима на паузу\n   */\n  public async producerAudioPause(): Promise<void> {\n    try {\n      if (this.producerAudio && !this.producerAudio.paused) {\n        this.producerAudio.pause();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Снять с паузы передапчу своего аудио-стрима\n   */\n  public async producerAudioResume(): Promise<void> {\n    try {\n      if (this.producerAudio && this.producerAudio.paused && !this.producerAudio.closed) {\n        this.producerAudio.resume();\n      } else if (this.producerAudio && this.producerAudio.closed) {\n        await this.producerAudioStart();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Остановить передачу своего аудио-стрима (для повторной передачи требуется пересоздать продюсера)\n   */\n  public async producerAudioClose(): Promise<void> {\n    try {\n      if (this.producerAudio && !this.producerAudio.closed) {\n        this.producerAudio.close();\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Поставить на паузу стрим юзера\n   */\n  public async targetProducerPause(data: { user_id: string, kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'producerPause', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Снять с паузы стрим юзера\n   * @param data юзер и тип стрима\n   */\n  public async targetProducerResume(data: { user_id: string, kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'producerResume', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Остановить стрим юзера (чтобы возобновить передачу этому пользователю придется пересоздать продюсера)\n   * @param data юзер и тип стрима\n   */\n  public async targetProducerClose(data: { user_id: string, kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'producerClose', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Поставить на паузу стрим всех юзеров\n   * @param data тип стрима\n   */\n  public async allProducerPause(data: { kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'allProducerPause', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Снять с паузы стрим всех юзеров\n   * @param data тип стрима\n   */\n  public async allProducerResume(data: { kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'allProducerResume', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Остановить стрим всех юзеров (чтобы возобновить передачу этим пользователям придется пересоздать продюсера)\n   * @param data тип стрима\n   */\n  public async allProducerClose(data: { kind: TKind }) {\n    try {\n      await this.socket.request('media', { action: 'allProducerClose', data });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Приня видео стрим от другого пользователя\n   * @param user_id юзер, которой передает видео-стрим\n   */\n  private async consumerVideoStart(user_id: string): Promise<void> {\n    try {\n      const { rtpCapabilities } = this.mediasoupDevice;\n\n      const consumeData: {\n        id: string;\n        producerId: string;\n        kind: TKind;\n        rtpParameters: RTCRtpParameters;\n      } = await this.socket.request('media', {\n        action: 'consume',\n        data: { rtpCapabilities, user_id, kind: 'video' },\n      });\n\n      const consumer = await this.consumerTransport.consume(consumeData);\n\n      // 'trackended' | 'transportclose'\n      consumer.on('transportclose', () => {\n        this.consumersVideoStream.delete(user_id);\n        this.consumersVideo.delete(user_id);\n      });\n\n      this.consumersVideo.set(user_id, consumer);\n\n      const stream = new MediaStream();\n\n      stream.addTrack(consumer.track);\n\n      this.consumersVideoStream.set(user_id, stream);\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Принять аудио стрим от другого пользователя\n   * @param user_id юзер, который передает аудио-стрим\n   */\n  private async consumerAudioStart(user_id: string): Promise<void> {\n    try {\n      const { rtpCapabilities } = this.mediasoupDevice;\n\n      const consumeData: {\n        id: string;\n        producerId: string;\n        kind: TKind;\n        rtpParameters: RTCRtpParameters;\n      } = await this.socket.request('media', {\n        action: 'consume',\n        data: { rtpCapabilities, user_id, kind: 'audio' },\n      });\n\n      const consumer = await this.consumerTransport.consume(consumeData);\n\n      // 'trackended' | 'transportclose'\n      consumer.on('transportclose', async () => {\n        this.consumersAudioStream.delete(user_id);\n        this.consumersAudio.delete(user_id);\n      });\n\n      this.consumersAudio.set(user_id, consumer);\n\n      const stream = new MediaStream();\n\n      stream.addTrack(consumer.track);\n\n      this.consumersAudioStream.set(user_id, stream);\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Перезапустить подключение\n   * @param type тип транспорта\n   */\n  public async restartIce(type: TPeer): Promise<void> {\n    try {\n      const iceParameters: RTCIceParameters = await this.socket.request('media', {\n        action: 'restartIce',\n        data: {\n          type,\n        },\n      });\n\n      switch (type) {\n        case 'producer':\n          await this.producerTransport.restartIce({ iceParameters });\n          break;\n        case 'consumer':\n          await this.consumerTransport.restartIce({ iceParameters });\n          break;\n      }\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Получить инфу о своем транспорте\n   * @param type тип транспорта\n   */\n  public async getTransportStats(type: TPeer): Promise<{ type: TPeer, stats: ITransportStat[] }> {\n    try {\n      return await this.socket.request('media', {\n        action: 'getTransportStats',\n        data: {\n          type,\n        },\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Получить инфу о стриме, который передает пользователь\n   * @param kind тип стрима\n   * @param user_id уникальный идентификатор юзера\n   */\n  public async getProducerStats(kind: TKind, user_id: string): Promise<{ kind: TKind, user_id: string; stats: IPeerStat[] }> {\n    try {\n      return await this.socket.request('media', {\n        action: 'getProducerStats',\n        data: {\n          kind,\n          user_id,\n        },\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Получить инфу о стриме, который принимает current_user от другого пользователя\n   * @param kind тип стрима\n   * @param user_id уникальный идентификатор юзера\n   */\n  public async getConsumerStats(kind: TKind, user_id: string): Promise<{ kind: TKind, user_id: string; stats: IPeerStat[] }> {\n    try {\n      return await this.socket.request('media', {\n        action: 'getConsumerStats',\n        data: {\n          kind,\n          user_id,\n        },\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n\n  /**\n   * Получить опорный кадр у пользователя, стрим которого принимается.\n   * Только для видео\n   * @param user_id уникальный идентификатор юзера\n   */\n  public async requestConsumerKeyFrame(user_id: string): Promise<void> {\n    try {\n      return await this.socket.request('media', {\n        action: 'requestConsumerKeyFrame',\n        data: {\n          user_id,\n        },\n      });\n    } catch (error) {\n      console.error(error.message, error.stack);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WssService } from './wss.service';\n\n@NgModule({\n  declarations: [],\n  providers: [\n    WssService,\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class WssModule {}\n","import { Injectable } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\nimport { connect } from 'socket.io-client';\n\nimport { environment } from '../../environments/environment';\nimport { MediasoupService } from './wss.mediasoup';\n\ntype IOSocket = SocketIOClient.Socket & { request: (ioEvent: string, data?: any) => Promise<any> };\n\n@Injectable()\nexport class WssService {\n  private socket: IOSocket;\n\n  public mediasoup: MediasoupService;\n\n  constructor(\n    private readonly logger: NGXLogger\n  ) {}\n\n  // tslint:disable-next-line: variable-name\n  public connect(current_user_id: string) {\n    this.socket = connect(environment.wss_url, {\n      query: {\n        session_id: 1,\n        user_id: current_user_id,\n      }\n    }) as IOSocket;\n\n    this.socket.request = (ioEvent: string, data: object = {}) => {\n      return new Promise((resolve) => {\n        this.socket.emit(ioEvent, data, resolve);\n      });\n    };\n\n    this.mediasoup = new MediasoupService(this.socket);\n\n    this.socket.on('connect', async () => {\n      await this.mediasoup.load();\n      await this.mediasoup.producerVideoStart();\n      await this.mediasoup.producerAudioStart();\n    });\n\n    this.socket.on('mediaClientConnected', async (msg: { user_id: string }) => {\n      // pass\n    });\n\n    this.socket.on('mediaClientDisconnect', async (msg: { user_id: string }) => {\n      // await this.mediasoup.deletePeer(msg.user_id);\n    });\n  }\n}\n","\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  name: 'development',\n  wss_url: 'https://tillsco.vboxe.com:8086/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}